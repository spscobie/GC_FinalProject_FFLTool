
@{
    ViewBag.Title = "WatchList";
}
@using Newtonsoft.Json.Linq

<h2>@ViewBag.WatchListName</h2>
<h4>Current Season - 2014</h4>


@if (ViewBag.DeletedPlayer != null)
{
    <br />
    <div class="alert alert-danger" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <strong>Note:</strong> @ViewBag.DeletedPlayer has been removed from this watch list.</div>
    <br />
}

<div class="container-fluid">
    <div class="table-responsive">
        <table id="tab1" class="table table-striped table-bordered table-hover table-condensed">
            <thead class="thead-dark " style="background-color: darkgrey">
                <tr class="text-center">
                    <td><strong>Position</strong></td>
                    <td><strong>First Name</strong></td>
                    <td><strong>Last Name</strong></td>
                    <td><strong>Team</strong></td>
                    <td>Week @ViewBag.CurrOpp[0]["week"] Opp.</td>
                    <td>Times played</td>
                    <td>Pass Yds p/game vs Opp</td>
                    <td>Pass Yds p/game <i>2017</i></td>
                    <td>Rush Yds p/game vs Opp</td>
                    <td>Rush Yds p/game <i>2017</i></td>
                    <td>Rec Yds p/game vs Opp</td>
                    <td>Rec Yds p/game <i>2017</i></td>
                    <td>FG Made p/game vs Opp</td>
                    <td>FG Made p/game <i>2017</i></td>
                    <td>Total TD p/game vs Opp</td>
                    <td>Total TD p/game <i>2017</i></td>
                    <td style="background-color: burlywood"><strong>Action</strong></td>
                </tr>
            </thead>

            <!-- Begin iterating though each player in a playlist -->
            @for (int i = 0; i < ViewBag.PlayersCurr.Count; i++)
            {
                <tr class="warning" style="background-color: whitesmoke">
                    <td class="text-center">@ViewBag.PlayersCurr[i]["player"]["Position"]</td>
                    <td>@ViewBag.PlayersCurr[i]["player"]["FirstName"]</td>
                    <td>@ViewBag.PlayersCurr[i]["player"]["LastName"]</td>
                    <td class="text-center">@ViewBag.PlayersCurr[i]["team"]["Abbreviation"]</td>        

                    <!-- Find upcoming opponent -->
                    @{ var opp = "";}
                    @foreach (var matchup in ViewBag.CurrOpp)
                    {
                        if (ViewBag.PlayersCurr[i]["team"]["Abbreviation"] == matchup["awayTeam"]["Abbreviation"])
                        {
                            <td class="text-center">@matchup["homeTeam"]["Abbreviation"]</td>
                            opp = @matchup["homeTeam"]["Abbreviation"];
                        }
                        else if (ViewBag.PlayersCurr[i]["team"]["Abbreviation"] == matchup["homeTeam"]["Abbreviation"])
                        {
                            <td class="text-center">@matchup["awayTeam"]["Abbreviation"]</td>
                            opp = @matchup["awayTeam"]["Abbreviation"];
                        }
                    }

                    <!-- Declare intermediary summary stat variables -->
                    @{ 
                        var passYdPer2017 = 0; var passYdPer = 0; var rushYdPer2017 = 0; var rushYdPer = 0; var fgMadePer2017 = 0; var fgMadePer = 0;
                        var recYdPer2017 = 0;  var recYdPer = 0; var tdPer2017 = 0.0; var tdPer = 0.0; var gameCount2017 = 0;  var gameCount = 0;
                        string oppHome, oppAway;
                    }

                    <!-- Calculate intermediate stats versus opponent for the current season -->
                    @foreach (var history in ViewBag.PlayersLogsCurr)
                    {
                        if (ViewBag.PlayersCurr[i]["player"]["ID"] == history["player"]["ID"])
                        {
                            oppHome = history["game"]["homeTeam"]["Abbreviation"].ToString();
                            oppAway = history["game"]["awayTeam"]["Abbreviation"].ToString();
                            if (oppHome == opp)
                            {
                                passYdPer += history["stats"]["PassYards"] == null ? 0 : Convert.ToInt32(history["stats"]["PassYards"]["#text"]);
                                rushYdPer += history["stats"]["RushYards"] == null ? 0 : Convert.ToInt32(history["stats"]["RushYards"]["#text"]);
                                recYdPer += history["stats"]["RecYards"] == null ? 0 : Convert.ToInt32(history["stats"]["RecYards"]["#text"]);
                                tdPer += history["stats"]["PassYards"] == null && history["stats"]["RushTD"] == null && history["stats"]["RecTD"] == null ? 0 : (Convert.ToInt32(history["stats"]["PassTD"]["#text"]) + Convert.ToInt32(history["stats"]["RushTD"]["#text"]) + Convert.ToInt32(history["stats"]["RecTD"]["#text"]));
                                fgMadePer += history["stats"]["FgMade"] == null ? 0 : Convert.ToInt32(history["stats"]["FgMade"]["#text"]);
                                gameCount++;
                            }
                            else if (oppAway == opp)
                            {
                                passYdPer += history["stats"]["PassYards"] == null ? 0 : Convert.ToInt32(history["stats"]["PassYards"]["#text"]);
                                rushYdPer += history["stats"]["RushYards"] == null ? 0 : Convert.ToInt32(history["stats"]["RushYards"]["#text"]);
                                recYdPer += history["stats"]["RecYards"] == null ? 0 : Convert.ToInt32(history["stats"]["RecYards"]["#text"]);
                                tdPer += history["stats"]["PassYards"] == null && history["stats"]["RushTD"] == null && history["stats"]["RecTD"] == null ? 0 : (Convert.ToInt32(history["stats"]["PassTD"]["#text"]) + Convert.ToInt32(history["stats"]["RushTD"]["#text"]) + Convert.ToInt32(history["stats"]["RecTD"]["#text"]));
                                fgMadePer += history["stats"]["FgMade"] == null ? 0 : Convert.ToInt32(history["stats"]["FgMade"]["#text"]);
                                gameCount++;
                            }

                            <!-- Calculate intermediate summary stats for all opponents in the current year -->
                            passYdPer2017 += history["stats"]["PassYards"] == null ? 0 : Convert.ToInt32(history["stats"]["PassYards"]["#text"]);
                            rushYdPer2017 += history["stats"]["RushYards"] == null ? 0 : Convert.ToInt32(history["stats"]["RushYards"]["#text"]);
                            recYdPer2017 += history["stats"]["RecYards"] == null ? 0 : Convert.ToInt32(history["stats"]["RecYards"]["#text"]);
                            tdPer2017 += history["stats"]["PassYards"] == null && history["stats"]["RushTD"] == null && history["stats"]["RecTD"] == null ? 0 : (Convert.ToInt32(history["stats"]["PassTD"]["#text"]) + Convert.ToInt32(history["stats"]["RushTD"]["#text"]) + Convert.ToInt32(history["stats"]["RecTD"]["#text"]));
                            fgMadePer2017 += history["stats"]["FgMade"] == null ? 0 : Convert.ToInt32(history["stats"]["FgMade"]["#text"]);

                            gameCount2017++;
                        }
                    }

                    <!-- Calculate intermediate stats versus opponent for the 2016 season -->
                    @foreach (var history in ViewBag.PlayersLogs2016)
                    {
                        if (ViewBag.PlayersCurr[i]["player"]["ID"] == history["player"]["ID"])
                        {
                            oppHome = history["game"]["homeTeam"]["Abbreviation"].ToString();
                            oppAway = history["game"]["awayTeam"]["Abbreviation"].ToString();
                            if (oppHome == opp)
                            {
                                passYdPer += history["stats"]["PassYards"] == null ? 0 : Convert.ToInt32(history["stats"]["PassYards"]["#text"]);
                                rushYdPer += history["stats"]["RushYards"] == null ? 0 : Convert.ToInt32(history["stats"]["RushYards"]["#text"]);
                                recYdPer += history["stats"]["RecYards"] == null ? 0 : Convert.ToInt32(history["stats"]["RecYards"]["#text"]);
                                tdPer += history["stats"]["PassYards"] == null && history["stats"]["RushTD"] == null && history["stats"]["RecTD"] == null ? 0 : (Convert.ToInt32(history["stats"]["PassTD"]["#text"]) + Convert.ToInt32(history["stats"]["RushTD"]["#text"]) + Convert.ToInt32(history["stats"]["RecTD"]["#text"]));
                                fgMadePer += history["stats"]["FgMade"] == null ? 0 : Convert.ToInt32(history["stats"]["FgMade"]["#text"]);
                                gameCount++;
                            }
                            else if (oppAway == opp)
                            {
                                passYdPer += history["stats"]["PassYards"] == null ? 0 : Convert.ToInt32(history["stats"]["PassYards"]["#text"]);
                                rushYdPer += history["stats"]["RushYards"] == null ? 0 : Convert.ToInt32(history["stats"]["RushYards"]["#text"]);
                                recYdPer += history["stats"]["RecYards"] == null ? 0 : Convert.ToInt32(history["stats"]["RecYards"]["#text"]);
                                tdPer += history["stats"]["PassYards"] == null && history["stats"]["RushTD"] == null && history["stats"]["RecTD"] == null ? 0 : (Convert.ToInt32(history["stats"]["PassTD"]["#text"]) + Convert.ToInt32(history["stats"]["RushTD"]["#text"]) + Convert.ToInt32(history["stats"]["RecTD"]["#text"]));
                                fgMadePer += history["stats"]["FgMade"] == null ? 0 : Convert.ToInt32(history["stats"]["FgMade"]["#text"]);
                                gameCount++;
                            }
                        }
                    }

                    <!-- Calculate intermediate stats versus opponent for the 2015 season -->
                    @foreach (var history in ViewBag.PlayersLogs2015)
                    {
                        if (ViewBag.PlayersCurr[i]["player"]["ID"] == history["player"]["ID"])
                        {
                            oppHome = history["game"]["homeTeam"]["Abbreviation"].ToString();
                            oppAway = history["game"]["awayTeam"]["Abbreviation"].ToString();
                            if (oppHome == opp)
                            {
                                passYdPer += history["stats"]["PassYards"] == null ? 0 : Convert.ToInt32(history["stats"]["PassYards"]["#text"]);
                                rushYdPer += history["stats"]["RushYards"] == null ? 0 : Convert.ToInt32(history["stats"]["RushYards"]["#text"]);
                                recYdPer += history["stats"]["RecYards"] == null ? 0 : Convert.ToInt32(history["stats"]["RecYards"]["#text"]);
                                tdPer += history["stats"]["PassYards"] == null && history["stats"]["RushTD"] == null && history["stats"]["RecTD"] == null ? 0 : (Convert.ToInt32(history["stats"]["PassTD"]["#text"]) + Convert.ToInt32(history["stats"]["RushTD"]["#text"]) + Convert.ToInt32(history["stats"]["RecTD"]["#text"]));
                                fgMadePer += history["stats"]["FgMade"] == null ? 0 : Convert.ToInt32(history["stats"]["FgMade"]["#text"]);
                                gameCount++;
                            }
                            else if (oppAway == opp)
                            {
                                passYdPer += history["stats"]["PassYards"] == null ? 0 : Convert.ToInt32(history["stats"]["PassYards"]["#text"]);
                                rushYdPer += history["stats"]["RushYards"] == null ? 0 : Convert.ToInt32(history["stats"]["RushYards"]["#text"]);
                                recYdPer += history["stats"]["RecYards"] == null ? 0 : Convert.ToInt32(history["stats"]["RecYards"]["#text"]);
                                tdPer += history["stats"]["PassYards"] == null && history["stats"]["RushTD"] == null && history["stats"]["RecTD"] == null ? 0 : (Convert.ToInt32(history["stats"]["PassTD"]["#text"]) + Convert.ToInt32(history["stats"]["RushTD"]["#text"]) + Convert.ToInt32(history["stats"]["RecTD"]["#text"]));
                                fgMadePer += history["stats"]["FgMade"] == null ? 0 : Convert.ToInt32(history["stats"]["FgMade"]["#text"]);
                                gameCount++;
                            }
                        }
                    }

                    <!-- Calculate intermediate stats versus opponent for the 2014 season -->
                    @foreach (var history in ViewBag.PlayersLogs2014)
                    {
                        if (ViewBag.PlayersCurr[i]["player"]["ID"] == history["player"]["ID"])
                        {
                            oppHome = history["game"]["homeTeam"]["Abbreviation"].ToString();
                            oppAway = history["game"]["awayTeam"]["Abbreviation"].ToString();
                            if (oppHome == opp)
                            {
                                passYdPer += history["stats"]["PassYards"] == null ? 0 : Convert.ToInt32(history["stats"]["PassYards"]["#text"]);
                                rushYdPer += history["stats"]["RushYards"] == null ? 0 : Convert.ToInt32(history["stats"]["RushYards"]["#text"]);
                                recYdPer += history["stats"]["RecYards"] == null ? 0 : Convert.ToInt32(history["stats"]["RecYards"]["#text"]);
                                tdPer += history["stats"]["PassYards"] == null && history["stats"]["RushTD"] == null && history["stats"]["RecTD"] == null ? 0 : (Convert.ToInt32(history["stats"]["PassTD"]["#text"]) + Convert.ToInt32(history["stats"]["RushTD"]["#text"]) + Convert.ToInt32(history["stats"]["RecTD"]["#text"]));
                                fgMadePer += history["stats"]["FgMade"] == null ? 0 : Convert.ToInt32(history["stats"]["FgMade"]["#text"]);
                                gameCount++;
                            }
                            else if (oppAway == opp)
                            {
                                passYdPer += history["stats"]["PassYards"] == null ? 0 : Convert.ToInt32(history["stats"]["PassYards"]["#text"]);
                                rushYdPer += history["stats"]["RushYards"] == null ? 0 : Convert.ToInt32(history["stats"]["RushYards"]["#text"]);
                                recYdPer += history["stats"]["RecYards"] == null ? 0 : Convert.ToInt32(history["stats"]["RecYards"]["#text"]);
                                tdPer += history["stats"]["PassYards"] == null && history["stats"]["RushTD"] == null && history["stats"]["RecTD"] == null ? 0 : (Convert.ToInt32(history["stats"]["PassTD"]["#text"]) + Convert.ToInt32(history["stats"]["RushTD"]["#text"]) + Convert.ToInt32(history["stats"]["RecTD"]["#text"]));
                                fgMadePer += history["stats"]["FgMade"] == null ? 0 : Convert.ToInt32(history["stats"]["FgMade"]["#text"]);
                                gameCount++;
                            }
                        }
                    }

                    <td class="text-center">@gameCount</td>

                    <!-- Declare summary stat variables -->
                    @{
                        var finalPassYdPer = Math.Round(passYdPer / Convert.ToDouble(gameCount));
                        var finalPassYdPer2017 = Math.Round(passYdPer2017 / Convert.ToDouble(gameCount2017));
                        var finalRushYdPer = Math.Round(rushYdPer / Convert.ToDouble(gameCount));
                        var finalRushYdPer2017 = Math.Round(rushYdPer2017 / Convert.ToDouble(gameCount2017));
                        var finalRecYdPer = Math.Round(recYdPer / Convert.ToDouble(gameCount));
                        var finalRecYdPer2017 = Math.Round(recYdPer2017 / Convert.ToDouble(gameCount2017));
                        var finalfgMadePer = Math.Round(fgMadePer / Convert.ToDouble(gameCount));
                        var finalfgMadePer2017 = Math.Round(fgMadePer2017 / Convert.ToDouble(gameCount2017));
                        var finalTdPer = Math.Round((tdPer / gameCount), 1);
                        var finalTdPer2017 = Math.Round((tdPer2017 / gameCount2017), 1);
                    }

                    <!-- Display all summary stat variables with appropriate color coding -->
                    @if (passYdPer > 0)
                    {
                        if (finalPassYdPer > finalPassYdPer2017)
                        {
                            <td class="text-center" style="color: forestgreen">@finalPassYdPer</td>
                        }
                        else if (finalPassYdPer < finalPassYdPer2017)
                        {
                            <td class="text-center" style="color: crimson">@finalPassYdPer</td>
                        }
                        else
                        {
                            <td class="text-center">@finalPassYdPer</td>
                        }
                    }
                    else
                    {
                        <td class="text-center">-</td>
                    }

                    @if (passYdPer2017 > 0)
                    {
                        <td class="text-center">@finalPassYdPer2017</td>
                    }
                    else
                    {
                        <td class="text-center">-</td>
                    }

                    @if (rushYdPer > 0)
                    {
                        if (finalRushYdPer > finalRushYdPer2017)
                        {
                            <td class="text-center" style="color: forestgreen">@finalRushYdPer</td>
                        }
                        else if (finalRushYdPer < finalRushYdPer2017)
                        {
                            <td class="text-center" style="color: crimson">@finalRushYdPer</td>
                        }
                        else
                        {
                            <td class="text-center">@finalRushYdPer</td>
                        }
                    }
                    else
                    {
                        <td class="text-center">-</td>
                    }

                    @if (rushYdPer2017 > 0)
                    {
                        <td class="text-center">@finalRushYdPer2017</td>
                    }
                    else
                    {
                        <td class="text-center">-</td>
                    }

                    @if (recYdPer > 0)
                    {
                        if (finalRecYdPer > finalRecYdPer2017)
                        {
                            <td class="text-center" style="color: forestgreen">@finalRecYdPer</td>
                        }
                        else if (finalRecYdPer < finalRecYdPer2017)
                        {
                            <td class="text-center" style="color: crimson">@finalRecYdPer</td>
                        }
                        else
                        {
                            <td class="text-center">@finalRecYdPer</td>
                        }
                    }
                    else
                    {
                        <td class="text-center">-</td>
                    }

                    @if (recYdPer2017 > 0)
                    {
                        <td class="text-center">@finalRecYdPer2017</td>
                    }
                    else
                    {
                        <td class="text-center">-</td>
                    }

                    @if (fgMadePer > 0)
                    {
                        if (finalfgMadePer > finalfgMadePer2017)
                        {
                            <td class="text-center" style="color: forestgreen">@finalfgMadePer</td>
                        }
                        else if (finalfgMadePer < finalfgMadePer2017)
                        {
                            <td class="text-center" style="color: crimson">@finalfgMadePer</td>
                        }
                        else
                        {
                            <td class="text-center">@finalfgMadePer</td>
                        }
                    }
                    else
                    {
                        <td class="text-center">-</td>
                    }

                    @if (fgMadePer2017 > 0)
                    {
                        <td class="text-center">@finalfgMadePer2017</td>
                    }
                    else
                    {
                        <td class="text-center">-</td>
                    }

                    @if (tdPer > 0)
                    {
                        if (finalTdPer > finalTdPer2017)
                        {
                            <td class="text-center" style="color: forestgreen">@finalTdPer</td>
                        }
                        else if (finalTdPer < finalTdPer2017)
                        {
                            <td class="text-center" style="color: crimson">@finalTdPer</td>
                        }
                        else
                        {
                            <td class="text-center">@finalTdPer</td>
                        }
                    }
                    else
                    {
                        <td class="text-center">-</td>
                    }

                    @if (tdPer2017 > 0)
                    {
                        <td class="text-center">@finalTdPer2017</td>
                    }
                    else
                    {
                        <td class="text-center">-</td>
                    }

                    <td class="text-center"><a class="btn btn-danger btn-xs" href="/Home/DropPlayer?watchlistId=@ViewBag.WatchlistId&playerId=@ViewBag.PlayersCurr[i]["player"]["ID"]" onclick="return confirm('Are you sure?')">Drop</a></td>
                </tr>
                        }
        </table>
        <br />
        <p><a href="/Home/ShowAllPlayers?watchlistId=@ViewBag.WatchlistId&watchListName=@ViewBag.WatchListName" class="btn btn-success btn-lg" >Add more players</a></p>
        <br />
    </div>
</div>